{"version":3,"sources":["./src/app/hourly-list/hourly-list.component.html","./src/app/hourly-list/hourly-list.component.ts","./src/app/shared/day.pipe.ts","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/app/today/today.component.ts","./src/app/today/today.component.html","./src/app/daily-list/daily-list.component.html","./src/app/daily-list/daily-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/data.service.ts","./src/app/shared/hpatommhg.pipe.ts","./src/app/app.module.ts","./src/app/shared/time.pipe.ts","./src/app/api-key/api-key.component.html","./src/app/api-key/api-key.component.ts","./src/app/shared/date.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"hourly-panel\">\n\t<div class=\"hourly-panel__container\" *ngIf=\"dataService.onecallData && dataService.onecallData.hourly\">\n\t\t<div class=\"nav nav-backward\" [class.hide]=\"dataService.currentHour === 0\" (click)=\"dataService.increaseCurrentValue(-1)\"></div>\n\t\t<div class=\"hourly-panel__row\">\n\t\t\t<ng-container *ngFor=\"let data of dataService.onecallData.hourly; let i = index\">\n\t\t\t<div class=\"hourly-panel__item\">\n\t\t\t\t<div>{{data.dt + dataService.onecallData.timezone_offset | date}} {{data.dt + dataService.onecallData.timezone_offset | time}}</div>\n\t\t\t\t<div class=\"sm\"><img src=\"http://openweathermap.org/img/wn/{{data.weather[0].icon}}@2x.png\" title={{data.weather[0].description}} alt={{data.weather[0].description}}/></div>\n\t\t\t\t<div class=\"xs\"><img src=\"http://openweathermap.org/img/wn/{{data.weather[0].icon}}.png\" title={{data.weather[0].description}} alt={{data.weather[0].description}}/></div>\n\t\t\t\t<div>{{data.temp > 0 ? \"+\" : \"\"}}{{data.temp}}&#176;C</div>\n\t\t\t</div>\n\t\t\t</ng-container>\n\t\t</div>\n\t\t\n\t\t<div class=\"nav nav-forward\" [class.hide]=\"dataService.currentHour + dataService.countHoursDisplayed >= dataService.maxHours\" (click)=\"dataService.increaseCurrentValue(1)\"></div>\n\t</div>\n\t<div class=\"nav-selector\">\n\t\t<ng-container *ngFor=\"let i of dataService.pageSelection\">\n\t\t\t<div class=selector [class.active]=\"i === dataService.currentHour/dataService.countHoursDisplayed\" (click)=\"dataService.changeCurrentValue(i)\"></div>\n\t\t</ng-container>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-hourly-list',\n  templateUrl: './hourly-list.component.html',\n  styleUrls: ['./hourly-list.component.scss']\n})\nexport class HourlyListComponent implements OnInit {\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core'\r\n\r\n@Pipe({\r\n\tname: 'day'\r\n})\r\nexport class DayPipe implements PipeTransform {\r\n\ttransform(dt: number): string {\r\n\t\tconst DaysOfWeek = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\r\n\t\tlet currentDate = new Date((dt)*1000)\r\n\t\tlet day = currentDate.getUTCDay()\r\n\t\treturn DaysOfWeek[day]\r\n\t}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\nimport { latLng, MapOptions, tileLayer, Map, Marker, icon } from 'leaflet';\n\n@Component({\n\tselector: 'app-weather',\n\ttemplateUrl: './weather.component.html',\n\tstyleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n\tpublic cityName: string\n\n\tmap: Map;\n\tmapOptions: MapOptions;\n\n\tmarker: Marker;\n\n\tconstructor(public dataService: DataService) { }\n\n\tngOnInit(): void {\n\t\tthis.initializeMapOptions();\n\t}\n\n\tsubmitCity(e) {\n\n\t\tthis.cityName = this.cityName.trim()\n\n\t\tif(this.cityName) {\n\t\t\tthis.dataService.fetchDataFromWeatherByCityName(this.cityName).subscribe(\n\t\t\t\t(data) => {\n\t\t\t\t\tthis.marker.setLatLng([data.coord.lat, data.coord.lon])\n\t\t\t\t\t.bindPopup(`${data.coord.lat}&#176;, ${data.coord.lon}&#176;`)\n\n\t\t\t\t\tthis.map.setView(latLng(data.coord.lat, data.coord.lon))\n\t\t\t\t})\n\t\t} else {\n\t\t\tthis.dataService.setError('Введите название города!')\n\t\t}\n\t\t\n\t}\n\n\tprivate initializeMapOptions() {\n\t\tthis.mapOptions = {\n\t\t\tcenter: latLng(this.dataService.lat, this.dataService.lon),\n\t\t\tzoom: 6,\n\t\t\tdoubleClickZoom: false,\n\t\t\tlayers: [\n\t\t\t\ttileLayer(\n\t\t\t\t\t'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxZoom: 18\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t]\n\t\t}\n\t}\n\n\tonMapReady(map: Map) {\n\t\tthis.map = map;\n\t\tthis.addMarker();\n\t}\n\n\tprivate addMarker() {\n\t\tthis.marker = new Marker([this.dataService.lat, this.dataService.lon])\n\t\t\t.setIcon(\n\t\t\t\ticon({\n\n\t\t\t\t\ticonUrl: 'assets/marker-icon.png',\n\t\t\t\t\ticonRetinaUrl: 'assets/marker-icon-2x.png',\n\t\t\t\t\tshadowUrl: 'assets/marker-shadow.png',\n\t\t\t\t\ticonSize: [25, 41],\n\t\t\t\t\ticonAnchor: [12, 41],\n\t\t\t\t\tpopupAnchor: [1, -34],\n\t\t\t\t\ttooltipAnchor: [16, -28],\n\t\t\t\t\tshadowSize: [41, 41],\n\t\t\t\t\tshadowAnchor: [8, 41]\n\t\t\t}))\n\t\t\t.bindPopup(`${this.dataService.lat}&#176;, ${this.dataService.lon}&#176;`)\n\t\tthis.marker.addTo(this.map)\n\t}\n\n\tdblClickMap(e) {\n\t\tthis.dataService.selectNewPlace(e.latlng.lat, e.latlng.lng);\n\t\t//this.marker.setLatLng([e.latlng.lat, e.latlng.lng])\n\t\tthis.marker.setLatLng([this.dataService.lat, this.dataService.lon])\n\t\t\t\t\t  .bindPopup(`${this.dataService.lat}&#176;, ${this.dataService.lon}&#176;`)\n\t}\n}\n","<ng-container *ngIf=\"dataService.apiKey && dataService.onecallData\">\n\t<div class=\"container\">\n\t\t<div class=\"main-panel\">\n\t\t\t<div class=\"error\">{{dataService.errorMessage}}</div>\n\t\t\t<div class=\"header\">\n\t\t\t\t<div class=\"header__info\">\n\t\t\t\t\t<p>Прогноз погоды</p>\n\t\t\t\t\t<div class=\"header__city\" *ngIf=\"dataService.weatherData\">{{dataService.weatherData.name}}</div>\n\t\t\t\t</div>\n\t\t\t\t<form class=\"header__search\" (submit)=\"submitCity($event)\">\n\t\t\t\t\t<input type='text'\n\t\t\t\t\t\t\t name='city'\n\t\t\t\t\t\t\t placeholder='Город'\n\t\t\t\t\t\t\t [(ngModel)]=\"cityName\"/>\n\t\t\t\t\t<button>Получить погоду</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div class=\"current-panel\">\n\t\t\t\t<div class=\"today\">\n\t\t\t\t\t<app-today></app-today>\n\t\t\t\t\t<div id=\"map\"\n\t\t\t\t\t\t\tleaflet\n\t\t\t\t\t\t\t(leafletMapReady)=\"onMapReady($event)\"\n\t\t\t\t\t\t\t(leafletDoubleClick)=\"dblClickMap($event)\"\n\t\t\t\t\t\t\t[leafletOptions]=\"mapOptions\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bottom_line\"></div>\n\t\t\t\t<app-hourly-list></app-hourly-list>\n\t\t\t</div>\n\t\t</div>\n\t\t<app-daily-list></app-daily-list>\n\t</div>\n</ng-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-today',\n  templateUrl: './today.component.html',\n  styleUrls: ['./today.component.scss']\n})\nexport class TodayComponent implements OnInit {\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"today-panel\">\n\t<div class=\"today-panel__data\">\n\t\t<div class=\"today-panel__row\">\n\t\t\t<div class=\"today-panel__column\">\n\t\t\t\t<div class=\"today-info\">{{dataService.onecallData.current.dt + dataService.onecallData.timezone_offset | date}}</div>\n\t\t\t\t<div class=\"today-info\">{{dataService.onecallData.current.dt + dataService.onecallData.timezone_offset | time}}</div>\n\t\t\t\t<div class=\"today-info\">{{dataService.onecallData.current.dt + dataService.onecallData.timezone_offset | day}}</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"today-panel__row\">\n\t\t\t<div class=\"today-panel__container-main\">\n\t\t\t\t<div class=\"today-panel__container\">\n\t\t\t\t\t<div class=\"temperature\">{{dataService.onecallData.current.temp > 0 ? \"+\" : \"\"}}{{dataService.onecallData.current.temp}}&#176;C</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"today-panel__container today-img\"><img class=\"today-icon\" src=\"http://openweathermap.org/img/wn/{{dataService.onecallData.current.weather[0].icon}}@4x.png\" alt={{dataService.onecallData.current.weather[0].description}} /></div>\n\t\t\t\t<div class=\"today-panel__column\">\n\t\t\t\t\t<div class=\"today-panel__container\">{{dataService.onecallData.current.weather[0].description}}</div>\n\t\t\t\t\t<div class=\"today-panel__container\">ощущается как {{dataService.onecallData.current.feels_like > 0 ? \"+\" : \"\"}}{{dataService.onecallData.current.feels_like}}&#176;C</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"today-panel__row\">\n\t\t\t<div class=\"today-panel__item\">\n\t\t\t\t<img class=\"weather-icon\" src=\"./assets/img/wind.svg\" alt=\"Ветер\" />\n\t\t\t\t<span>{{dataService.onecallData.current.wind_speed}} м/с</span>\n\t\t\t\t<img class=\"weather-icon\" src=\"./assets/img/wind_arrow.svg\" style=\"transform: rotate({{dataService.onecallData.current.wind_deg + 180}}deg)\" alt=\"Направление ветра\" />\n\t\t\t</div>\n\t\t\t<div class=\"today-panel__item\">\n\t\t\t\t<img class=\"weather-icon\" src=\"./assets/img/humidity.svg\" alt=\"Влажность\" />\n\t\t\t\t<span>{{dataService.onecallData.current.humidity}}%</span>\n\t\t\t</div>\n\t\t\t<div class=\"today-panel__item\">\n\t\t\t\t<img class=\"weather-icon\" src=\"./assets/img/pressure.svg\" alt=\"Давление\" />\n\t\t\t\t<span>{{dataService.onecallData.current.pressure | hpatommhg}} мм рт ст</span>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"today-panel__row\">\n\t\t\t<div class=\"today-panel__container\">\n\t\t\t\t<div class=\"today-panel__item\">Восход: {{dataService.onecallData.current.sunrise + dataService.onecallData.timezone_offset | time}}</div>\n\t\t\t\t<div class=\"today-panel__item\">Закат: {{dataService.onecallData.current.sunset + dataService.onecallData.timezone_offset | time}}</div>\n\t\t\t\t<div class=\"today-panel__item\">Облачность: {{dataService.onecallData.current.clouds}} %</div>\n\t\t\t\t<div class=\"today-panel__item\">Точка росы: {{dataService.onecallData.current.dew_point}}&#176;C</div>\n\t\t\t\t<div class=\"today-panel__item\">UV-индекс: {{dataService.onecallData.current.uvi}} </div>\n\t\t\t\t<div class=\"today-panel__item\">Видимость: {{dataService.onecallData.current.visibility}} м</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","<div class=\"daily-panel\">\n\t<ng-container *ngFor=\"let daily of dataService.onecallData.daily; let i = index\">\n\t\t<div class=\"daily-panel__container\">\n\t\t\t<div class=\"daily-panel__item\">\n\t\t\t\t<div>{{daily.dt + dataService.onecallData.timezone_offset | day}}</div>\n\t\t\t\t<div>{{daily.dt + dataService.onecallData.timezone_offset | date}}</div>\n\t\t\t\t<div><img src=\"http://openweathermap.org/img/wn/{{daily.weather[0].icon}}@2x.png\" alt={{daily.weather[0].description}}/></div>\n\t\t\t\t<div>днём: {{daily.temp.day > 0 ? \"+\" : \"\"}}{{daily.temp.day}}&#176;C</div>\n\t\t\t\t<div>ночью: {{daily.temp.night > 0 ? \"+\" : \"\"}}{{daily.temp.night}}&#176;C</div>\n\t\t\t\t<div>{{daily.weather[0].description}}</div>\n\t\t\t</div>\n\t\t</div>\n\t</ng-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n  selector: 'app-daily-list',\n  templateUrl: './daily-list.component.html',\n  styleUrls: ['./daily-list.component.scss']\n})\nexport class DailyListComponent implements OnInit {\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<div class=\"wrapper\">\n\t<app-api-key></app-api-key>\n\t<app-weather></app-weather>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\ninterface OnecallData {\r\n\t[key: string]: any\r\n}\r\ninterface WeatherData {\r\n\t[key: string]: any\r\n}\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n\tpublic apiKey = sessionStorage.getItem('api-key') //'a3cc488aa673730c8354dd39912b5cde'\r\n\tpublic lat = 55.15\r\n\tpublic lon = 61.43\r\n\tpublic currentHour = 0\r\n\tpublic errorMessage = ''\r\n\r\n\tpublic countHoursDisplayed = 3\r\n\tpublic countDaysDisplayed = 5\r\n\tpublic maxHours = 3\r\n\tpublic pageSelection: number[]\r\n\r\n\tpublic onecallData: OnecallData\r\n\tpublic weatherData: WeatherData\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tenterKey(key: string) {\r\n\t\tthis.apiKey = key\r\n\t}\r\n\r\n\r\n\tfetchDataFromOnecallByGeographicCoordinates(key: string = this.apiKey): Observable<OnecallData> {\r\n\t\treturn this.http.get<OnecallData>(`https://api.openweathermap.org/data/2.5/onecall?lat=${this.lat}&lon=${this.lon}&exclude=minutely&units=metric&lang=ru&appid=${key}`)\r\n\t\t\t.pipe(tap( data => {\r\n\t\t\t\tthis.apiKey = key\r\n\t\t\t\tthis.maxHours = data.hourly.length\r\n\t\t\t\tthis.pageSelection = new Array(this.maxHours / (this.countHoursDisplayed == 0 ? 1 : this.countHoursDisplayed)).fill(0).map((_,i) => i)\r\n\t\t\t\tthis.onecallData = data;\r\n\t\t\t\tthis.onecallData.hourly = data.hourly.filter((_, i) => i >= this.currentHour && i < this.currentHour + this.countHoursDisplayed)\r\n\t\t\t\tthis.onecallData.daily = data.daily.filter((_, i) => i > 0 && i < this.countDaysDisplayed)\r\n\r\n\t\t\t\tthis.fetchDataFromWeatherByGeographicCoordinates().subscribe()\r\n\r\n\t\t\t\tthis.setError('')\r\n\r\n\t\t\t},\r\n\t\t\tdata => {\r\n\t\t\t\tthis.apiKey = null; \r\n\t\t\t\tthis.setError(`${data.error.cod} ${data.error.message}`)\r\n\t\t\t}\r\n\t\t))\r\n\t}\r\n\r\n\tfetchDataFromWeatherByGeographicCoordinates(): Observable<WeatherData> {\r\n\t\treturn this.http.get<WeatherData>(`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&lat=${this.lat}&lon=${this.lon}&appid=${this.apiKey}`)\r\n\t\t\t.pipe(tap( data => {\r\n\t\t\t\tthis.weatherData = data;\r\n\t\t\t},\r\n\t\t\tdata => {\r\n\t\t\t\tthis.setError(`${data.error.cod} ${data.error.message}`)\r\n\t\t\t}\r\n\t\t\t))\r\n\t}\r\n\r\n\tfetchDataFromWeatherByCityName(cityName): Observable<WeatherData> {\r\n\t\treturn this.http.get<WeatherData>(`https://api.openweathermap.org/data/2.5/weather?units=metric&lang=ru&q=${cityName}&appid=${this.apiKey}`)\r\n\t\t\t.pipe(tap( data => {\r\n\t\t\t\t\tthis.weatherData = data\r\n\r\n\t\t\t\t\tthis.lat = data.coord.lat\r\n\t\t\t\t\tthis.lon = data.coord.lon\r\n\t\t\t\t\tthis.fetchDataFromOnecallByGeographicCoordinates().subscribe()\r\n\t\t\t\t},\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tthis.setError(`${data.error.cod} ${data.error.message}`)\r\n\t\t\t\t}))\r\n\t}\r\n\r\n\tincreaseCurrentValue(inc: number) {\r\n\t\tconst nextHour = this.currentHour + inc * this.countHoursDisplayed\r\n\t\tthis.currentHour = nextHour\r\n\t\t\r\n\t\tif(nextHour < this.countHoursDisplayed) {\r\n\t\t\tthis.currentHour = 0\r\n\t\t} else if(nextHour + this.countHoursDisplayed > this.maxHours - 1) {\r\n\t\t\tthis.currentHour = this.maxHours - this.countHoursDisplayed\r\n\t\t} else {\r\n\t\t\tthis.currentHour = nextHour\r\n\t\t}\r\n\r\n\t\tthis.fetchDataFromOnecallByGeographicCoordinates().subscribe()\r\n\t}\r\n\r\n\tchangeCurrentValue(i: number){\r\n\t\tthis.currentHour = i * this.countHoursDisplayed\r\n\t\tthis.fetchDataFromOnecallByGeographicCoordinates().subscribe()\r\n\t}\r\n\r\n\tselectNewPlace(lat: number, lon: number) {\r\n\t\tthis.lat = lat\r\n\t\tthis.lon = lon\r\n\t\tthis.fetchDataFromOnecallByGeographicCoordinates().subscribe()\r\n\t}\r\n\r\n\tsetError(message: string) {\r\n\t\tthis.errorMessage = message\r\n\t}\r\n}","import {Pipe, PipeTransform} from '@angular/core'\r\n\r\n@Pipe({\r\n\tname: 'hpatommhg',\r\n\tpure: false\r\n})\r\nexport class HpaToMmhg implements PipeTransform {\r\n\ttransform(hpa: number): number {\r\n\t\treturn Math.round(hpa*0.75006375541921)\r\n\t}\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\n\nimport { AppComponent } from './app.component';\nimport { ApiKeyComponent } from './api-key/api-key.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { DatePipe } from './shared/date.pipe';\nimport { DayPipe } from './shared/day.pipe';\nimport { TimePipe } from './shared/time.pipe';\nimport { HpaToMmhg } from './shared/hpatommhg.pipe';\nimport { TodayComponent } from './today/today.component';\nimport { HourlyListComponent } from './hourly-list/hourly-list.component';\nimport { DailyListComponent } from './daily-list/daily-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ApiKeyComponent,\n    WeatherComponent,\n    DatePipe,\n    DayPipe,\n    TimePipe,\n    HpaToMmhg,\n    TodayComponent,\n    HourlyListComponent,\n    DailyListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    LeafletModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Pipe, PipeTransform} from '@angular/core'\r\n\r\n@Pipe({\r\n\tname: 'time'\r\n})\r\nexport class TimePipe implements PipeTransform {\r\n\ttransform(dt: number): string {\r\n\t\tlet currentDate = new Date((dt)*1000)\r\n\t\tlet hours = currentDate.getUTCHours()\r\n\t\tlet minutes = currentDate.getUTCMinutes()\r\n\t\treturn (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes)\r\n\t}\r\n}","<div class=\"api-key\" *ngIf=\"!dataService.apiKey\">\n\t<div class=\"api-key__container\">\n\t\t<div class=\"api-key__title\">\n\t\t\tВведите API-ключ для доступа к данным о погоде на сайте openweathermap.org\n\t\t</div>\n\t\t<form class=\"api-key__form\" (submit)=\"submitApiKey()\">\n\t\t\t<input type=\"text\" placeholder=\"API Key\" name=\"apiKey\" [(ngModel)]=\"key\" (keydown)=\"changeHandler()\" />\n\t\t\t<button>Применить</button>\n\t\t</form>\n\t\t<div class=\"api-key__error\">\n\t\t\t{{errorMessage}}\n\t\t</div>\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/data.service';\n\n@Component({\n\tselector: 'app-api-key',\n\ttemplateUrl: './api-key.component.html',\n\tstyleUrls: ['./api-key.component.scss']\n})\nexport class ApiKeyComponent implements OnInit {\n\tpublic key: string\n\tpublic errorMessage: string = ''\n\n\tconstructor(public dataService: DataService) { }\n\n\tngOnInit(): void {\n\t\tif(this.dataService.apiKey) {\n\t\t\tthis.dataService.fetchDataFromOnecallByGeographicCoordinates().subscribe()\n\t\t}\n\t}\n\n\tsubmitApiKey() {\n\t\tif(this.key) {\n\t\t\tthis.dataService.fetchDataFromOnecallByGeographicCoordinates(this.key).subscribe( \n\t\t\t\t(data) => {\n\t\t\t\t\tthis.errorMessage = ''\n\t\t\t\t\tsessionStorage.setItem('api-key', this.key)\n\t\t\t\t},\n\t\t\t\t(data) => {\n\t\t\t\t\tif(data.error.cod) {\n\t\t\t\t\t\tthis.errorMessage = `${data.error.cod} ${data.error.message}`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.errorMessage = data.statusText\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t} else {\n\t\t\tthis.errorMessage = 'Введите ключ API!'\n\t\t}\n\t}\n\n\tchangeHandler() {\n\t\tthis.errorMessage = ''\n\t}\n}","import {Pipe, PipeTransform} from '@angular/core'\r\n\r\n@Pipe({\r\n\tname: 'date'\r\n})\r\nexport class DatePipe implements PipeTransform {\r\n\ttransform(dt: number): string {\r\n\t\tconst MONTHS = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\r\n\t\tlet currentDate = new Date((dt)*1000)\r\n\t\tlet date = currentDate.getUTCDate()\r\n\t\tlet month = currentDate.getUTCMonth()\r\n\t\tlet year = currentDate.getUTCFullYear()\r\n\t\treturn (date + ' ' + MONTHS[month] + ' ' + year)\r\n\t}\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}